apply plugin: "groovy"
apply plugin: "java"
apply plugin: "application"
apply plugin: "idea"

sourceCompatibility = "1.6"
targetCompatibility = "1.6"

String projectName = "installer"
version = "git describe --tags".execute([], project.projectDir).text.trim()
String libFileName = "${projectName}-${version}"
group = "com.jaemmisseo"
mainClassName = "install.Start"
String installerHome = "$System.env.INSTALLER_HOME"

buildscript {
    ext {
        groovyVersion = '2.1.3'
    }
    repositories {
        mavenCentral()
        maven {
            url 'http://repo.spring.io/milestone'
        }
    }
    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src/main/java']
        }
    }

    test {
        groovy {
            srcDirs = ['src/test/java']
        }
    }
}


/*****
 * Before jar
 *****/
task writeVersion << {
    new File("$buildDir/resources/main/.version").write(version)
    new File("$buildDir/resources/main/.compiler").write("Java ${System.getProperty('java.version')}")
    new File("$buildDir/resources/main/.date").write(new Date().toString())
    new File("$buildDir/resources/main/.libtohome").write('../')
}

/*****
 * jar
 *****/
jar {
    dependsOn writeVersion
    
    /** MANIFEST **/
    manifest {
        attributes  'Title': 'Installer', 'Version': version, 'Main-Class': mainClassName
    }

    /** Jarfile Name **/
    archiveName "${libFileName}.jar"

    /** Extracted All Dependencies To jar **/
//    dependsOn configurations.runtime
//    from {
//        configurations.compile.collect {it.isDirectory()? it: zipTree(it)}
//    }

    /** All Dependencies to lib folder in jar **/
//    into('lib') {
//        from configurations.runtime
//    }
}

/*****
 * Before distZip
 *****/
applicationDistribution.from([
        "src/main/resources/binForBuilder/macgyver",
        "src/main/resources/binForBuilder/macgyver.bat",
]){
    into "bin"
}

/*****
 * Before deployLocal
 *****/
task extractZip(type: Copy){
    from zipTree("$buildDir/distributions/${libFileName}.zip")
    into "$buildDir/distributions"
}

task cleanHome(type: Delete){
    delete installerHome
}

/*****
 * Before deployLocal
 * Deploy to INSTALLER_HOME
 *****/
task deployLocal(type: Copy){
    dependsOn distZip, extractZip, cleanHome
    from "$buildDir/distributions/${libFileName}"
    into installerHome
}



repositories {
    jcenter()
    maven { url 'http://repo.spring.io/milestone' }
    maven { url "http://maven.springframework.org/release" }
    maven { url "http://maven.restlet.org" }
    maven { url "http://61.250.197.68/nexus/content/repositories/thirdparty" }
    maven { url "http://61.250.197.68/nexus/content/repositories/snapshots" }
    maven { url "http://61.250.197.68/nexus/content/repositories/releases" }
    maven { url "http://61.250.197.68/nexus/content/repositories/spring-releases" }
}

dependencies {
    //GROOVY
    compile 'org.codehaus.groovy:groovy-all:2.1.3'

    //REST
//    compile 'com.sun.jersey:jersey-server:1.12-b01' //Jersey-Server
    compile 'com.sun.jersey:jersey-client:1.9.1'    //Jersey-Client
    
    //JDBC
    compile "com.oracle:ojdbc6:11.2.0.3"
    compile "com.tmax.tibero:tibero-jdbc:5.0"

    //POI
    compile "org.apache.poi:poi:3.9"
    compile "org.apache.poi:poi-ooxml:3.9"
    compile "org.apache.poi:poi-ooxml-schemas:3.9"

    //TAR
    compile 'org.apache.commons:commons-compress:1.11'

    // TEST
    testCompile "junit:junit:4.11"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
