name: CI

on:
  push:
    branches:
      - master
      - develop
    tags:
      - '*'
#       - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master
      - develop
    
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup JDK
        uses: actions/setup-java@v3      
        with:
          java-version: '8.0.362+9'
          distribution: 'temurin'
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Checkout submodules
        run: git submodule update --init --recursive
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}
  
      - name: Upload Jacoco Report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/html

      - name: Setup Variables
        run: |
          echo "APP_VERSION=$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')" >> $GITHUB_OUTPUT
          echo "GIT_VERSION=$(git describe --tags)" >> $GITHUB_OUTPUT
          echo "today=$(date -I)" >> $GITHUB_ENV
#         run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"        
        id: var

      - name: Check Variables
        run: |
          echo "APP_VERSION is ${{ steps.var.outputs.APP_VERSION }}" 
          echo "The second color is ${{ steps.var.outputs.GIT_VERSION }}"
          echo "today is $(env.today)"

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ steps.extract_version_name.outputs.APP_VERSION }}
#           release_name: ${{ steps.extract_version_name.outputs.APP_VERSION }}
#           draft: false
#           prerelease: false

#       - name: Upload Release Asset
#         id: upload-release-asset
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ needs.create_release.outputs.upload_url }}
#           asset_path: ./build/distributions/*.zip
#           asset_name: installer-maker-cli-0.8.3.1.zip
#           asset_content_type: application/zip

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: avaj-java/installer-maker
          # A personal access token for the GitHub repository in which the release will be created and edited.
          # It is recommended to create the access token with the following scopes: `repo, user, admin:repo_hook`.
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/distributions/*.zip
          file_glob: true
          asset_name: mything
          tag: ${{ steps.extract_version_name.outputs.APP_VERSION }}
          overwrite: true
          body: "This is my release text - ${{ steps.extract_version_name.outputs.APP_VERSION }}"
        
